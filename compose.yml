version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka-1:
    image: wurstmeister/kafka:latest
    container_name: kafka-1
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # ✅ 모든 IP에서 접속 가능하도록 수정
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  # ✅ `localhost`만 광고
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper


  #이거는 카프카 상태 확인
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    restart: always
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092
    depends_on:
      - kafka-1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx512m"  # Heap 메모리 제한
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
      - xpack.security.enabled=false  # 보안 기능 비활성화
      - xpack.monitoring.templates.enabled=false  # 모니터링 비활성화
      - xpack.watcher.enabled=false  # Watcher 비활성화
    ports:
      - "9200:9200"
    networks:
      - elastic_net
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 1g  # 컨테이너 메모리 제한 설정

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    ports:
      - "5601:5601"
    networks:
      - elastic_net
    depends_on:
      - elasticsearch

networks:
  elastic_net:
volumes:
  elasticsearch_data:
    driver: local